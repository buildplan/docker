services:
  headscale:
    image: headscale/headscale:0.25.1  # Specifies the version of Headscale to use
    pull_policy: always
    container_name: headscale
    restart: unless-stopped
    command: serve
    volumes:
      - ./headscale/config:/etc/headscale  # Configuration files for Headscale
      - ./headscale/data:/var/lib/headscale  # Data storage for Headscale
    labels:
      - traefik.enable=true
      - traefik.http.routers.headscale-rtr.rule=Host(`${HS_URL}`)  # URL for accessing Headscale - add in .env
      - traefik.http.routers.headscale-rtr.priority=90
      - traefik.http.routers.headscale-rtr.entrypoints=websecure
      - traefik.http.routers.headscale-rtr.tls.certresolver=myresolver
      - traefik.http.services.headscale-svc.loadbalancer.server.port=8080  # Port for Headscale service
      - traefik.http.routers.headscale-rtr.middlewares=corsHeader@docker,secureHeaders@docker,cspHeader@docker  # Apply CSP

  headplane:
    image: ghcr.io/tale/headplane:0.5.7  # Specifies the version of Headplane
    pull_policy: always
    container_name: headplane
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 128M
    volumes:
      - ./headplane/config.yaml:/etc/headplane/config.yaml  # Configuration for Headplane
      - ./headscale/config:/etc/headscale  # Shared Headscale configuration
      - /var/run/docker.sock:/var/run/docker.sock:ro  # Docker socket for container management
      - ./headplane/users/users.json:/var/lib/headplane/users.json # Persist user storage file
      - ./headplane/secrets/oidc_client_secret:/etc/headplane/secrets/oidc_client_secret:ro # OICD Secret via File Mounts
    depends_on:
      - headscale  # Ensure Headscale starts before Headplane
    labels:
      - traefik.enable=true
      # Router Definition 
      - traefik.http.routers.headplane-rtr.rule=Host(`${HS_URL}`) && PathPrefix(`/admin`)
      - traefik.http.routers.headplane-rtr.priority=100
      - traefik.http.routers.headplane-rtr.entrypoints=websecure
      - traefik.http.routers.headplane-rtr.tls.certresolver=myresolver
      - traefik.http.services.headplane-svc.loadbalancer.server.port=3000 # headplane port
      # ---- Middleware for redirect ----
      - traefik.http.middlewares.headplane-addslash.redirectregex.regex=^https?://([^/]+)/admin$$
      - traefik.http.middlewares.headplane-addslash.redirectregex.replacement=https://$${1}/admin/
      - traefik.http.middlewares.headplane-addslash.redirectregex.permanent=true
      - traefik.http.routers.headplane-rtr.middlewares=headplane-addslash@docker,corsHeader@docker,secureHeaders@docker,cspHeader@docker

  headscale-admin:
    image: goodieshq/headscale-admin:0.25.5
    container_name: headscale-admin
    restart: unless-stopped
    pull_policy: always # Or your preferred policy
    labels:
      - traefik.enable=true
      - traefik.http.routers.headscale-admin-extra-rtr.rule=Host(`${HUI_URL}`) # .env for HUI_URL
      - traefik.http.routers.headscale-admin-extra-rtr.entrypoints=websecure
      - traefik.http.routers.headscale-admin-extra-rtr.tls.certresolver=myresolver
      - traefik.http.services.headscale-admin-extra-svc.loadbalancer.server.port=80 # headscale-admin port
      - traefik.http.routers.headscale-admin-extra-rtr.middlewares=corsHeader@docker

  traefik:
    image: traefik:v3.3.5 # latest traefik March 2025
    pull_policy: always
    restart: unless-stopped
    container_name: traefik
    command:
      - --log.filePath=/var/log/traefik.log
      - --accesslog=true
      - --log.level=INFO
      - --ping=true
      - --api=true
      - --api.dashboard=false
      - --providers.docker
      - --entrypoints.web.address=:80  # HTTP entry point
      - --entrypoints.websecure.address=:443  # HTTPS entry point
      - --certificatesresolvers.myresolver.acme.tlschallenge=true
      - --certificatesresolvers.myresolver.acme.email=${LE_EMAIL} # add in .env
      - --certificatesresolvers.myresolver.acme.storage=/certificates/acme.json
      - --global.sendAnonymousUsage=false
      - --entrypoints.websecure.http.tls.options=securetls@file # for TLS
    ports:
      - 80:80  # Maps host port 80 to container port 80 for HTTP
      - 443:443  # Maps host port 443 to container port 443 for HTTPS
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/certificates:/certificates
      - ./traefik/logs/traefik.log:/var/log/traefik.log
      - ./traefik/tls.yml:/tls.yml # Custom TLS
    logging: # Limit logs
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--output-document=/dev/null", "http://127.0.0.1:8080/ping"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 20s
    deploy: # Limit resource usage
      resources:
        limits:
          memory: 512M
          cpus: '0.50'
        reservations:
          memory: 128M
          cpus: '0.25'
    labels:
      # CORS middleware for API calls
      - traefik.http.middlewares.corsHeader.headers.accesscontrolallowmethods=GET,OPTIONS,PUT
      - traefik.http.middlewares.corsHeader.headers.accesscontrolallowheaders=Authorization,*
      - traefik.http.middlewares.corsHeader.headers.accesscontrolalloworiginlist=https://${HS_URL},https://${HUI_URL}
      - traefik.http.middlewares.corsHeader.headers.accesscontrolmaxage=43200
      - traefik.http.middlewares.corsHeader.headers.addvaryheader=true

      # Redirect HS root path (/) to /admin (Now served by headplane)
      - traefik.http.middlewares.redirect-hs-root-to-admin.redirectregex.regex=^https?://([^/]+)/?$$
      - traefik.http.middlewares.redirect-hs-root-to-admin.redirectregex.replacement=https://$${1}/admin
      - traefik.http.middlewares.redirect-hs-root-to-admin.redirectregex.permanent=true
      - traefik.http.routers.hs-root-redirect.rule=Host(`${HS_URL}`) && Path(`/`)
      - traefik.http.routers.hs-root-redirect.priority=95 # Higher than headscale (90), lower than headplane (100)
      - traefik.http.routers.hs-root-redirect.entrypoints=websecure
      - traefik.http.routers.hs-root-redirect.tls.certresolver=myresolver
      - traefik.http.routers.hs-root-redirect.middlewares=redirect-hs-root-to-admin@docker,secureHeaders@docker,cspHeader@docker  # Apply CSP
      - traefik.http.routers.hs-root-redirect.service=noop@internal

      # ---- REDIRECT FOR HUI - Headsscale-admin ----
      - traefik.http.middlewares.redirect-hui-root-to-admin.redirectregex.regex=^https?://${HUI_URL}/?$$
      - traefik.http.middlewares.redirect-hui-root-to-admin.redirectregex.replacement=https://${HUI_URL}/admin
      - traefik.http.middlewares.redirect-hui-root-to-admin.redirectregex.permanent=true
      - traefik.http.routers.hui-root-redirect.rule=Host(`${HUI_URL}`) && Path(`/`)
      - traefik.http.routers.hui-root-redirect.entrypoints=websecure
      - traefik.http.routers.hui-root-redirect.tls.certresolver=myresolver
      - traefik.http.routers.hui-root-redirect.service=noop@internal
      - traefik.http.routers.hui-root-redirect.middlewares=redirect-hui-root-to-admin@docker,secureHeaders@docker # add secureHeaders@docker etc

      # HSTS Security Headers
      - traefik.http.middlewares.secureHeaders.headers.stsSeconds=31536000 # 1 year
      - traefik.http.middlewares.secureHeaders.headers.stsIncludeSubdomains=true
      - traefik.http.middlewares.secureHeaders.headers.stsPreload=true
      - traefik.http.middlewares.secureHeaders.headers.forceSTSHeader=true

      # Global Redirect HTTP to HTTPS
      - traefik.http.routers.http-catchall.rule=hostregexp(`{host:.+}`)
      - traefik.http.routers.http-catchall.entrypoints=web
      - traefik.http.routers.http-catchall.middlewares=redirect-to-https@docker
      - traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https
      - traefik.http.middlewares.redirect-to-https.redirectscheme.permanent=true

      # Enforce Secure Cookies & Enhanced Security
      - traefik.http.middlewares.secureHeaders.headers.browserXssFilter=true
      - traefik.http.middlewares.secureHeaders.headers.contentTypeNosniff=true
      - traefik.http.middlewares.secureHeaders.headers.referrerPolicy=same-origin
      - traefik.http.middlewares.secureHeaders.headers.customrequestheaders.X-Forwarded-Proto=https
      - traefik.http.middlewares.secureHeaders.headers.customresponseheaders.Strict-Transport-Security=max-age=31536000; includeSubDomains; preload
      - traefik.http.middlewares.secureHeaders.headers.frameDeny=true  # Prevent Clickjacking
      - traefik.http.middlewares.secureHeaders.headers.permissionsPolicy=geolocation=(), microphone=(), camera=() # Restrict Browser Features

      # Content Security Policy (CSP)
      - traefik.http.middlewares.cspHeader.headers.customresponseheaders.Content-Security-Policy="default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; font-src 'self'; connect-src 'self'; frame-ancestors 'none'"
