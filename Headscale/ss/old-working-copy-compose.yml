############################################
# Need DNS records pointing to public IP heads.example.com and hui.example.com
# This will bring up headscale, headscale-admin and traefik 
# headscale will be on heads.example.com and hui.example.com will be heascale-admin interface
#
# Ports to expose - 80/tcp, 443/tcp, 8080/tcp
# correct email address for Letsencrypt
#
# Folder structure
#    headscale-deploy - contains - docker-compose.yaml (file), headscale (dir), traefik (dir)
#        headscale - contains - config (dir), data (dir) 
#            config - contains - config.yaml
#            data - empty for container to user for db
#        traefik - contains - auth (dir), certificates (dir)
#            certificates - contains - a blank acme.json - can be created with 'touch acme.json'
#            auth - contains - users.htpasswd and gui-users.htpasswd
#              can be created with 'htpasswd -c ./users.htpasswd user-name' and needs 'sudo apt install apache2-utils'
#############################################

services:

  headscale:
    image: headscale/headscale:0.25.1
    pull_policy: always
    container_name: headscale
    restart: unless-stopped
    command: serve
    volumes:
      - ./headscale/config:/etc/headscale
      - ./headscale/data:/var/lib/headscale
    labels:
      - traefik.enable=true
      - traefik.http.routers.headscale-rtr.rule=Host(`heads.example.com`)
      - traefik.http.routers.headscale-rtr.entrypoints=websecure
      - traefik.http.routers.headscale-rtr.tls.certresolver=myresolver
      - traefik.http.services.headscale-svc.loadbalancer.server.port=8080
      - traefik.http.routers.headscale-rtr.middlewares=corsHeader@docker

  headscale-admin:
    image: goodieshq/headscale-admin:0.25.5
    pull_policy: always
    container_name: headscale-admin
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.routers.headscale-admin-rtr.rule=Host(`hui.example.com`) && PathPrefix(`/admin`)
      - traefik.http.routers.headscale-admin-rtr.entrypoints=websecure
      - traefik.http.routers.headscale-admin-rtr.tls.certresolver=myresolver
      - traefik.http.services.headscale-admin-svc.loadbalancer.server.port=80
      - traefik.http.routers.headscale-admin-rtr.middlewares=corsHeader@docker

  traefik:
    image: traefik:v3.3.4
    pull_policy: always
    restart: unless-stopped
    container_name: traefik
    command:
      - --log.filePath=/var/log/traefik.log
      - --accesslog=true
      - --log.level=INFO
      - --api=true
      - --api.dashboard=false
      - --providers.docker
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --certificatesresolvers.myresolver.acme.tlschallenge=true
      - --certificatesresolvers.myresolver.acme.email=letse@example.com # change this
      - --certificatesresolvers.myresolver.acme.storage=/certificates/acme.json
      - --global.sendAnonymousUsage=false
    ports:
      - 80:80
      - 443:443
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/certificates:/certificates
      - ./traefik/logs/traefik.log:/var/log/traefik.log
    labels:
      # CORS Middleware Configuration
      - traefik.http.middlewares.corsHeader.headers.accesscontrolallowmethods=GET,OPTIONS,PUT
      - traefik.http.middlewares.corsHeader.headers.accesscontrolallowheaders=Authorization, *
      - traefik.http.middlewares.corsHeader.headers.accesscontrolalloworiginlist=https://hui.example.com # change this
      - traefik.http.middlewares.corsHeader.headers.accesscontrolmaxage=100
      - traefik.http.middlewares.corsHeader.headers.addvaryheader=true

      # --- Middleware to Redirect root path (/) to /admin ---
      - traefik.http.middlewares.redirect-hui-root-to-admin.redirectregex.regex=^https?://([^/]+)/?$$
      - traefik.http.middlewares.redirect-hui-root-to-admin.redirectregex.replacement=https://$${1}/admin
      - traefik.http.middlewares.redirect-hui-root-to-admin.redirectregex.permanent=true # Use true for a 301 permanent redirect
      # --- Router to apply the root redirect for hui.example.com ---
      - traefik.http.routers.hui-root-redirect.rule=Host(`hui.example.com`) && Path(`/`) # change this
      - traefik.http.routers.hui-root-redirect.entrypoints=websecure
      - traefik.http.routers.hui-root-redirect.tls.certresolver=myresolver
      - traefik.http.routers.hui-root-redirect.middlewares=redirect-hui-root-to-admin@docker
      # No .service needed as this router only redirects

      # Redirect HTTP to HTTPS (Recommended)
      - traefik.http.routers.http-catchall.rule=hostregexp(`{host:.+}`)
      - traefik.http.routers.http-catchall.entrypoints=web
      - traefik.http.routers.http-catchall.middlewares=redirect-to-https@docker
      - traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https
      - traefik.http.middlewares.redirect-to-https.redirectscheme.permanent=true
