networks:
  registry-net:
    driver: bridge

services:
  # --- registry ---
  registry:
    image: registry:3.0.0
    container_name: registry_service
    volumes:
      - ./docker-registry/data:/var/lib/registry
      - ./docker-registry/config.yml:/etc/distribution/config.yml:ro
    networks:
      - registry-net
    environment:
      OTEL_TRACES_EXPORTER: "none"
      REGISTRY_HTTP_SECRET: ${REGISTRY_HTTP_SECRET} # .env for all the veriables
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G

  # --- proxy ---
  caddy:
    image: caddy:2.10.0
    container_name: caddy
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"
    volumes:
      - ./caddy/Caddyfile:/etc/caddy/Caddyfile
      - ./caddy/data:/data
      - ./caddy/config:/config
      - ./caddy/logs:/var/log/caddy
    networks:
      - registry-net
    restart: unless-stopped
    depends_on:
      - registry
      - registry-ui
      - portainer
      - prometheus
      - grafana
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "3"
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 512M

  # --- ui ---
  registry-ui:
    image: joxit/docker-registry-ui:main  # 2.5.7
    container_name: registry_ui
    networks:
      - registry-net
    depends_on:
      - registry
    environment:
      NGINX_PROXY_PASS_URL: "http://registry:5000"
      DELETE_IMAGES: "true"
      SINGLE_REGISTRY: "true"
      REGISTRY_TITLE: ${REGISTRY_TITLE}
      PULL_URL: ${PULL_URL}
      THEME: "dark"
      THEME_PRIMARY_TEXT: "#e5e7eb"
      THEME_NEUTRAL_TEXT: "#6b7280"
      THEME_BACKGROUND: "#111827"
      THEME_HOVER_BACKGROUND: "#1f2937"
      THEME_ACCENT_TEXT: "#14b8a6"
      THEME_HEADER_TEXT: "#e5e7eb"
      THEME_HEADER_ACCENT_TEXT: "#5eead4"
      THEME_HEADER_BACKGROUND: "#1f2937"
      THEME_FOOTER_TEXT: "#e5e7eb"
      THEME_FOOTER_NEUTRAL_TEXT: "#9ca3af"
      THEME_FOOTER_BACKGROUND: "#1f2937"
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "3"
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 256M


  # --- REGSYNC SERVICE ---
  regsync:
    image: ghcr.io/regclient/regsync:v0.8.3
    container_name: regsync_service
    command: ["-c", "/config/regsync.yml", "server"]
    volumes:
      - ./regsync.yml:/config/regsync.yml:ro
      - ./secrets:/secrets:ro
    networks:
      - registry-net
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "3"
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 256M

  # --- REGBOT SERVICE ---
  regbot:
    image: ghcr.io/regclient/regbot:v0.8.3
    container_name: regbot_service
    command: ["-c", "/config/regbot.yml", "server"]
    volumes:
      - ./regbot.yml:/config/regbot.yml:ro
      - ./secrets:/secrets:ro
    networks:
      - registry-net
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "3"
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 256M

  # --- Portainer Service ---
  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./portainer_data:/data
    networks:
      - registry-net
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 256M

  # --- Prometheus Service ---
  prometheus:
    image: prom/prometheus:v3.4.1
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./prometheus/prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.listen-address=:9090'
      - '--web.enable-lifecycle'
    # ports:
      # - "9090:9090"
    networks:
      - registry-net
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M

  # --- Grafana Service ---
  grafana:
    image: grafana/grafana:12.0.1
    container_name: grafana
    restart: unless-stopped
    # ports:
      # - "3000:3000"
    volumes:
      - ./grafana/grafana-data:/var/lib/grafana
      - ./grafana/grafana-config:/etc/grafana
      - ./grafana/grafana-provisioning:/etc/grafana/provisioning
      - ./grafana/grafana-logs:/var/log/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
      - GF_SERVER_ROOT_URL=${GF_SERVER_ROOT_URL}
      # GF_INSTALL_PLUGINS: some-plugin,another-plugin
    networks:
      - registry-net
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M

# --- CrowdSec Service ---
  crowdsec:
    image: crowdsecurity/crowdsec:latest
    container_name: crowdsec
    restart: unless-stopped
    depends_on:
      - caddy
    networks:
      - registry-net
    volumes:
      - ./caddy/logs/access.log:/var/log/caddy/access.log:ro
      - ./crowdsec/config:/etc/crowdsec:rw
      - ./crowdsec/data:/var/lib/crowdsec/data:rw
      - /var/log/ufw.log:/var/log/host/ufw.log:ro
      - /var/log/sshd.log:/var/log/host/sshd.log:ro
    environment:
      - TZ=Europe/London
      - GID=$(id -g)
    ports:
      - "127.0.0.1:8080:8080"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
    healthcheck:
      test: ["CMD", "cscli", "capi", "status"]
      interval: 1m
      timeout: 15s
      retries: 3

  # --- cAdvisor Service ---
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.52.1
    container_name: cadvisor
    privileged: true
    devices:
      - /dev/kmsg:/dev/kmsg
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    ports:
      - "127.0.0.1:8081:8080"
      - "100.64.0.26:8081:8080"
    networks:
      - registry-net
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 512M

  # --- NOTIFICATION APP SERVICE ---
  registry-webhook-receiver:
    image: iamdockin/registry-webhook-receiver:latest
    container_name: registry-webhook-receiver
    restart: unless-stopped
    networks:
      - registry-net
    environment:
      - NTFY_SERVER_URL=${NTFY_SERVER_URL}
      - NTFY_TOPIC=${NTFY_TOPIC}
      - NTFY_ACCESS_TOKEN=${NTFY_ACCESS_TOKEN}
      - NTFY_PRIORITY=${NTFY_PRIORITY:-default}
      - FLASK_ENV=production
    logging:
      driver: "json-file"
      options: { max-size: "5m", max-file: "3" }
    deploy:
      resources:
        limits: { cpus: '0.25', memory: 128M }
